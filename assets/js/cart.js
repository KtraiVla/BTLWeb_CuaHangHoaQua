
document.addEventListener('DOMContentLoaded', () => {
  // H√†m ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng tr√™n bi·ªÉu t∆∞·ª£ng gi·ªè h√†ng
  function updateCartNumber() {
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    document.querySelector(".header-center__number").textContent = totalItems;
  }

  // H√†m ƒë·ªÉ hi·ªÉn th·ªã gi·ªè h√†ng
  function displayCart() {
    const cartItemsContainer = document.getElementById("cartItems");
    const totalPriceElement = document.getElementById("totalPrice");
    let cart = JSON.parse(localStorage.getItem("cart")) || [];

    // X√≥a n·ªôi dung c≈©
    cartItemsContainer.innerHTML = "";

    // N·∫øu gi·ªè h√†ng r·ªóng
    if (cart.length === 0) {
      cartItemsContainer.innerHTML =
        '<p style="text-align: center; padding: 20px;">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>';
      totalPriceElement.textContent = "0ƒë";
      return;
    }

    // Nh√≥m c√°c s·∫£n ph·∫©m theo t√™n
    const groupedCart = [];
    cart.forEach(item => {
      const existingItem = groupedCart.find(groupedItem => groupedItem.name === item.name);
      if (existingItem) {
        existingItem.quantity += item.quantity;
      } else {
        groupedCart.push({ ...item });
      }
    });

    // T·∫°o HTML cho t·ª´ng s·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c nh√≥m
    groupedCart.forEach((item, index) => {
      const cartItem = document.createElement("div");
      cartItem.classList.add("cart-item");
      cartItem.innerHTML = `
        <div class="item-image">
          <img src="${item.image}" alt="${item.name}" />
        </div>
        <div class="item-info">${item.name}</div>
        <div class="item-price">${item.price.toLocaleString("vi-VN")}ƒë</div>
        <div class="item-quantity">
          <button class="decrease" data-name="${item.name}">-</button>
          <span class="quantity">${item.quantity}</span>
          <button class="increase" data-name="${item.name}">+</button>
        </div>
        <div class="item-total">${(item.price * item.quantity).toLocaleString("vi-VN")}ƒë</div>
        <div class="item-delete"><button class="delete" data-name="${item.name}">üóëÔ∏è</button></div>
      `;
      cartItemsContainer.appendChild(cartItem);
    });

    // T√≠nh v√† hi·ªÉn th·ªã t·ªïng ti·ªÅn
    const total = groupedCart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    totalPriceElement.textContent = total.toLocaleString("vi-VN") + "ƒë";
  }

  // H√†m ƒë·ªÉ c·∫≠p nh·∫≠t gi·ªè h√†ng trong localStorage v√† giao di·ªán
  function updateCart(name, action) {
    let cart = JSON.parse(localStorage.getItem("cart")) || [];

    // T√¨m t·∫•t c·∫£ c√°c s·∫£n ph·∫©m c√≥ t√™n gi·ªëng nhau
    const itemsToUpdate = cart.filter(item => item.name === name);
    const itemsToKeep = cart.filter(item => item.name !== name);

    if (!itemsToUpdate.length) return; // N·∫øu kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m, tho√°t

    // T√≠nh t·ªïng s·ªë l∆∞·ª£ng c·ªßa c√°c s·∫£n ph·∫©m c√≥ c√πng t√™n
    const totalQuantity = itemsToUpdate.reduce((sum, item) => sum + item.quantity, 0);
    const firstItem = itemsToUpdate[0]; // L·∫•y th√¥ng tin s·∫£n ph·∫©m ƒë·∫ßu ti√™n (image, price, v.v.)

    let updatedQuantity = totalQuantity;

    if (action === "increase") {
      updatedQuantity += 1;
    } else if (action === "decrease" && totalQuantity > 1) {
      updatedQuantity -= 1;
    } else if (action === "delete" || (action === "decrease" && totalQuantity <= 1)) {
      updatedQuantity = 0; // X√≥a s·∫£n ph·∫©m
    }

    // C·∫≠p nh·∫≠t gi·ªè h√†ng: n·∫øu s·ªë l∆∞·ª£ng > 0 th√¨ th√™m l·∫°i s·∫£n ph·∫©m ƒë√£ g·ªôp, n·∫øu kh√¥ng th√¨ b·ªè qua
    let updatedCart = [...itemsToKeep];
    if (updatedQuantity > 0) {
      updatedCart.push({ ...firstItem, quantity: updatedQuantity });
    }

    // L∆∞u l·∫°i gi·ªè h√†ng v√†o localStorage
    localStorage.setItem("cart", JSON.stringify(updatedCart));

    // C·∫≠p nh·∫≠t giao di·ªán v√† s·ªë l∆∞·ª£ng tr√™n bi·ªÉu t∆∞·ª£ng gi·ªè h√†ng
    displayCart();
    updateCartNumber();
  }

  // Khi trang t·∫£i, hi·ªÉn th·ªã gi·ªè h√†ng v√† c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng tr√™n bi·ªÉu t∆∞·ª£ng
  displayCart();
  updateCartNumber();

  // X·ª≠ l√Ω c√°c s·ª± ki·ªán click tr√™n gi·ªè h√†ng
  document.getElementById("cartItems").addEventListener("click", (e) => {
    const name = e.target.getAttribute("data-name");

    if (e.target.classList.contains("increase")) {
      updateCart(name, "increase");
    } 
    else if (e.target.classList.contains("decrease")) {
      updateCart(name, "decrease");
    } 
    else if (e.target.classList.contains("delete")) {
      updateCart(name, "delete");
    }
  });

  // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang nh·∫≠p th√¥ng tin giao h√†ng khi nh·∫•n n√∫t "ƒê·∫∑t h√†ng"
  document.querySelector('.checkout').addEventListener('click', () => {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    if (cart.length === 0) {
      alert('Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng. Vui l√≤ng th√™m s·∫£n ph·∫©m tr∆∞·ªõc khi ƒë·∫∑t h√†ng.');
      return;
    }
    window.location.href = './order_info.html';
  });
});